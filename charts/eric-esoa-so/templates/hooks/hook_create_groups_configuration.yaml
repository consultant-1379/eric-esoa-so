#
# COPYRIGHT Ericsson 2022
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
#

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "eric-esoa-so.name" . }}-create-groups-configuration-hook
  labels:
    app: {{ template "eric-esoa-so.name" . }}
    {{- include "eric-esoa-so.kubernetes-io-info" .| nindent 4 }}
  annotations:
    {{- include "eric-esoa-so.helm-annotations" .| nindent 4 }}
    "helm.sh/hook": post-install, post-upgrade, post-rollback
    "helm.sh/hook-weight": "20"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  backoffLimit: 8
  template:
    metadata:
      labels:
        app: {{ template "eric-esoa-so.name" . }}
    spec:
      serviceAccountName: {{ template "eric-esoa-so.name" . }}-sa
      {{- if include "eric-esoa-so.iamClient.pullSecrets" . }}
      imagePullSecrets:
        - name: {{ template "eric-esoa-so.iamClient.pullSecrets" . }}
      {{- end }}
      restartPolicy: Never
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: iam-client
          image: {{ template "eric-esoa-so-library-chart.imagePath" (dict "imageId" "iamClient" "values" .Values "files" .Files) }}
          imagePullPolicy: {{ template "eric-esoa-so.iamClient.registryImagePullPolicy" . }}
          env:
          - name: IAM_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.iam.adminSecret | quote }}
                key: {{ .Values.global.iam.userKey | quote }}
          - name: IAM_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.iam.adminSecret | quote }}
                key: {{ .Values.global.iam.passwordKey | quote }}
          args:
          - "create"
          - "group"
          - "--keycloak_hostname={{ .Values.global.hosts.iam }}"
          - "--keycloak_user=$(IAM_ADMIN_USER)"
          - "--keycloak_password=$(IAM_ADMIN_PASSWORD)"
          - "--config=/config/groups-configuration.json"
          volumeMounts:
          - name: create-groups-configuration-volume
            mountPath: /config
          - name: create-cacert-volume
            mountPath: /mnt/certs
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 128474
            privileged: false
            capabilities:
              drop:
                - all
      {{- include "eric-esoa-so.nodeSelector" .| indent 6 }}
      volumes:
      - name: create-groups-configuration-volume
        configMap:
          name: {{ .Chart.Name }}-groups-configuration-configmap
          defaultMode: 0777
      - name: create-cacert-volume
        secret:
          secretName: {{ .Values.iam.ca.secretName }}
          items:
            - key: {{ .Values.iam.ca.key }}
              path: {{ .Values.iam.ca.filePath }}
